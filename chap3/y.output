Grammar

    0 $accept: program $end

    1 empty: /* empty */

    2 decs: empty
    3     | dec decs

    4 dec: tydec
    5    | vardec
    6    | fundec

    7 tydec: TYPE ID EQ ty

    8 ty: ID
    9   | LBRACE tyfields RBRACE
   10   | ARRAY OF ID

   11 tyfields: empty
   12         | tyfield COMMA tyfields

   13 tyfield: ID COLON ID

   14 vardec: VAR ID ASSIGN exp
   15       | VAR ID COLON ID ASSIGN exp

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   18 lvalue: ID
   19       | lvalue DOT ID
   20       | lvalue LBRACK exp RBRACK

   21 expseq: exp
   22       | expseq SEMICOLON exp

   23 let_exp: LET decs IN expseq END
   24        | LET decs IN END

   25 cond_exp: IF exp THEN exp
   26         | IF exp THEN exp ELSE exp

   27 loop_exp: WHILE exp DO exp
   28         | FOR exp TO exp DO exp
   29         | BREAK

   30 misc_exp: NIL
   31         | LPAREN expseq RPAREN
   32         | LPAREN RPAREN
   33         | INT
   34         | STRING
   35         | MINUS exp

   36 func_call_exp: ID LPAREN RPAREN
   37              | ID LPAREN expseq RPAREN

   38 arith_exp: exp PLUS exp
   39          | exp MINUS exp
   40          | exp TIMES exp
   41          | exp DIVIDE exp

   42 comp_exp: exp EQ exp
   43         | exp LT exp
   44         | exp LE exp
   45         | exp NEQ exp
   46         | exp GT exp
   47         | exp GE exp

   48 bool_exp: exp AND exp
   49         | exp OR exp

   50 record_exp: ID LBRACE record_fields RBRACE

   51 record_field: ID EQ exp

   52 record_fields: empty
   53              | record_field
   54              | record_fields COMMA record_field

   55 array_exp: ID LBRACK exp RBRACK OF exp

   56 assign_exp: lvalue ASSIGN exp

   57 exp: lvalue
   58    | let_exp
   59    | cond_exp
   60    | loop_exp
   61    | misc_exp
   62    | func_call_exp
   63    | arith_exp
   64    | comp_exp
   65    | bool_exp
   66    | record_exp
   67    | array_exp
   68    | assign_exp

   69 program: exp


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 16 17
TYPE (259) 7
ID (260) 7 8 10 13 14 15 16 17 18 19 36 37 50 51 55
LBRACK (261) 20 55
OF (262) 10 55
DO (263) 27 28
THEN (264) 25 26
ELSE (265) 26
SEMICOLON (266) 22
ASSIGN (267) 14 15 56
OR (268) 49
AND (269) 48
GE (270) 47
GT (271) 46
LE (272) 44
LT (273) 43
NEQ (274) 45
EQ (275) 7 16 17 42 51
MINUS (276) 35 39
PLUS (277) 38
DIVIDE (278) 41
TIMES (279) 40
UMINUS (280)
STRING (281) 34
INT (282) 33
COMMA (283) 12 54
COLON (284) 13 15 17
LPAREN (285) 16 17 31 32 36 37
RPAREN (286) 16 17 31 32 36 37
RBRACK (287) 20 55
LBRACE (288) 9 50
RBRACE (289) 9 50
DOT (290) 19
ARRAY (291) 10
IF (292) 25 26
WHILE (293) 27
FOR (294) 28
TO (295) 28
LET (296) 23 24
IN (297) 23 24
END (298) 23 24
BREAK (299) 29
NIL (300) 30
VAR (301) 14 15


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
empty (48)
    on left: 1, on right: 2 11 52
decs (49)
    on left: 2 3, on right: 3 23 24
dec (50)
    on left: 4 5 6, on right: 3
tydec (51)
    on left: 7, on right: 4
ty (52)
    on left: 8 9 10, on right: 7
tyfields (53)
    on left: 11 12, on right: 9 12 16 17
tyfield (54)
    on left: 13, on right: 12
vardec (55)
    on left: 14 15, on right: 5
fundec (56)
    on left: 16 17, on right: 6
lvalue (57)
    on left: 18 19 20, on right: 19 20 56 57
expseq (58)
    on left: 21 22, on right: 22 23 31 37
let_exp (59)
    on left: 23 24, on right: 58
cond_exp (60)
    on left: 25 26, on right: 59
loop_exp (61)
    on left: 27 28 29, on right: 60
misc_exp (62)
    on left: 30 31 32 33 34 35, on right: 61
func_call_exp (63)
    on left: 36 37, on right: 62
arith_exp (64)
    on left: 38 39 40 41, on right: 63
comp_exp (65)
    on left: 42 43 44 45 46 47, on right: 64
bool_exp (66)
    on left: 48 49, on right: 65
record_exp (67)
    on left: 50, on right: 66
record_field (68)
    on left: 51, on right: 53 54
record_fields (69)
    on left: 52 53 54, on right: 50 54
array_exp (70)
    on left: 55, on right: 67
assign_exp (71)
    on left: 56, on right: 68
exp (72)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68, on right: 14 15 16
    17 20 21 22 25 26 27 28 35 38 39 40 41 42 43 44 45 46 47 48 49
    51 55 56 69
program (73)
    on left: 69, on right: 0


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 24
    program        go to state 25


state 1

   18 lvalue: ID .
   36 func_call_exp: ID . LPAREN RPAREN
   37              | ID . LPAREN expseq RPAREN
   50 record_exp: ID . LBRACE record_fields RBRACE
   55 array_exp: ID . LBRACK exp RBRACK OF exp

    LBRACK  shift, and go to state 26
    LPAREN  shift, and go to state 27
    LBRACE  shift, and go to state 28

    $default  reduce using rule 18 (lvalue)


state 2

   35 misc_exp: MINUS . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 29


state 3

   34 misc_exp: STRING .

    $default  reduce using rule 34 (misc_exp)


state 4

   33 misc_exp: INT .

    $default  reduce using rule 33 (misc_exp)


state 5

   31 misc_exp: LPAREN . expseq RPAREN
   32         | LPAREN . RPAREN

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 30
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    expseq         go to state 31
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 32


state 6

   25 cond_exp: IF . exp THEN exp
   26         | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 33


state 7

   27 loop_exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 34


state 8

   28 loop_exp: FOR . exp TO exp DO exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 35


state 9

   23 let_exp: LET . decs IN expseq END
   24        | LET . decs IN END

    FUNCTION  shift, and go to state 36
    TYPE      shift, and go to state 37
    VAR       shift, and go to state 38

    $default  reduce using rule 1 (empty)

    empty   go to state 39
    decs    go to state 40
    dec     go to state 41
    tydec   go to state 42
    vardec  go to state 43
    fundec  go to state 44


state 10

   29 loop_exp: BREAK .

    $default  reduce using rule 29 (loop_exp)


state 11

   30 misc_exp: NIL .

    $default  reduce using rule 30 (misc_exp)


state 12

   19 lvalue: lvalue . DOT ID
   20       | lvalue . LBRACK exp RBRACK
   56 assign_exp: lvalue . ASSIGN exp
   57 exp: lvalue .

    LBRACK  shift, and go to state 45
    ASSIGN  shift, and go to state 46
    DOT     shift, and go to state 47

    $default  reduce using rule 57 (exp)


state 13

   58 exp: let_exp .

    $default  reduce using rule 58 (exp)


state 14

   59 exp: cond_exp .

    $default  reduce using rule 59 (exp)


state 15

   60 exp: loop_exp .

    $default  reduce using rule 60 (exp)


state 16

   61 exp: misc_exp .

    $default  reduce using rule 61 (exp)


state 17

   62 exp: func_call_exp .

    $default  reduce using rule 62 (exp)


state 18

   63 exp: arith_exp .

    $default  reduce using rule 63 (exp)


state 19

   64 exp: comp_exp .

    $default  reduce using rule 64 (exp)


state 20

   65 exp: bool_exp .

    $default  reduce using rule 65 (exp)


state 21

   66 exp: record_exp .

    $default  reduce using rule 66 (exp)


state 22

   67 exp: array_exp .

    $default  reduce using rule 67 (exp)


state 23

   68 exp: assign_exp .

    $default  reduce using rule 68 (exp)


state 24

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   69 program: exp .

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 69 (program)


state 25

    0 $accept: program . $end

    $end  shift, and go to state 60


state 26

   55 array_exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 61


state 27

   36 func_call_exp: ID LPAREN . RPAREN
   37              | ID LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 62
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    expseq         go to state 63
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 32


state 28

   50 record_exp: ID LBRACE . record_fields RBRACE

    ID  shift, and go to state 64

    $default  reduce using rule 1 (empty)

    empty          go to state 65
    record_field   go to state 66
    record_fields  go to state 67


state 29

   35 misc_exp: MINUS exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    $default  reduce using rule 35 (misc_exp)


state 30

   32 misc_exp: LPAREN RPAREN .

    $default  reduce using rule 32 (misc_exp)


state 31

   22 expseq: expseq . SEMICOLON exp
   31 misc_exp: LPAREN expseq . RPAREN

    SEMICOLON  shift, and go to state 68
    RPAREN     shift, and go to state 69


state 32

   21 expseq: exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 21 (expseq)


state 33

   25 cond_exp: IF exp . THEN exp
   26         | IF exp . THEN exp ELSE exp
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    THEN    shift, and go to state 70
    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59


state 34

   27 loop_exp: WHILE exp . DO exp
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    DO      shift, and go to state 71
    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59


state 35

   28 loop_exp: FOR exp . TO exp DO exp
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59
    TO      shift, and go to state 72


state 36

   16 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 73


state 37

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 74


state 38

   14 vardec: VAR . ID ASSIGN exp
   15       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 75


state 39

    2 decs: empty .

    $default  reduce using rule 2 (decs)


state 40

   23 let_exp: LET decs . IN expseq END
   24        | LET decs . IN END

    IN  shift, and go to state 76


state 41

    3 decs: dec . decs

    FUNCTION  shift, and go to state 36
    TYPE      shift, and go to state 37
    VAR       shift, and go to state 38

    $default  reduce using rule 1 (empty)

    empty   go to state 39
    decs    go to state 77
    dec     go to state 41
    tydec   go to state 42
    vardec  go to state 43
    fundec  go to state 44


state 42

    4 dec: tydec .

    $default  reduce using rule 4 (dec)


state 43

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


state 44

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 45

   20 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 78


state 46

   56 assign_exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 79


state 47

   19 lvalue: lvalue DOT . ID

    ID  shift, and go to state 80


state 48

   49 bool_exp: exp OR . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 81


state 49

   48 bool_exp: exp AND . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 82


state 50

   47 comp_exp: exp GE . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 83


state 51

   46 comp_exp: exp GT . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 84


state 52

   44 comp_exp: exp LE . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 85


state 53

   43 comp_exp: exp LT . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 86


state 54

   45 comp_exp: exp NEQ . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 87


state 55

   42 comp_exp: exp EQ . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 88


state 56

   39 arith_exp: exp MINUS . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 89


state 57

   38 arith_exp: exp PLUS . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 90


state 58

   41 arith_exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 91


state 59

   40 arith_exp: exp TIMES . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 92


state 60

    0 $accept: program $end .

    $default  accept


state 61

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   55 array_exp: ID LBRACK exp . RBRACK OF exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59
    RBRACK  shift, and go to state 93


state 62

   36 func_call_exp: ID LPAREN RPAREN .

    $default  reduce using rule 36 (func_call_exp)


state 63

   22 expseq: expseq . SEMICOLON exp
   37 func_call_exp: ID LPAREN expseq . RPAREN

    SEMICOLON  shift, and go to state 68
    RPAREN     shift, and go to state 94


state 64

   51 record_field: ID . EQ exp

    EQ  shift, and go to state 95


state 65

   52 record_fields: empty .

    $default  reduce using rule 52 (record_fields)


state 66

   53 record_fields: record_field .

    $default  reduce using rule 53 (record_fields)


state 67

   50 record_exp: ID LBRACE record_fields . RBRACE
   54 record_fields: record_fields . COMMA record_field

    COMMA   shift, and go to state 96
    RBRACE  shift, and go to state 97


state 68

   22 expseq: expseq SEMICOLON . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 98


state 69

   31 misc_exp: LPAREN expseq RPAREN .

    $default  reduce using rule 31 (misc_exp)


state 70

   25 cond_exp: IF exp THEN . exp
   26         | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 99


state 71

   27 loop_exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 100


state 72

   28 loop_exp: FOR exp TO . exp DO exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 101


state 73

   16 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 102


state 74

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 103


state 75

   14 vardec: VAR ID . ASSIGN exp
   15       | VAR ID . COLON ID ASSIGN exp

    ASSIGN  shift, and go to state 104
    COLON   shift, and go to state 105


state 76

   23 let_exp: LET decs IN . expseq END
   24        | LET decs IN . END

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 106
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    expseq         go to state 107
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 32


state 77

    3 decs: dec decs .

    $default  reduce using rule 3 (decs)


state 78

   20 lvalue: lvalue LBRACK exp . RBRACK
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59
    RBRACK  shift, and go to state 108


state 79

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   56 assign_exp: lvalue ASSIGN exp .

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 56 (assign_exp)


state 80

   19 lvalue: lvalue DOT ID .

    $default  reduce using rule 19 (lvalue)


state 81

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   49         | exp OR exp .

    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 49 (bool_exp)


state 82

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   48         | exp AND exp .
   49         | exp . OR exp

    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 48 (bool_exp)


state 83

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   47         | exp GE exp .
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 47 (comp_exp)


state 84

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   46         | exp GT exp .
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 46 (comp_exp)


state 85

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   44         | exp LE exp .
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 44 (comp_exp)


state 86

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   43         | exp LT exp .
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 43 (comp_exp)


state 87

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   45         | exp NEQ exp .
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 45 (comp_exp)


state 88

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   42         | exp EQ exp .
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 42 (comp_exp)


state 89

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   39          | exp MINUS exp .
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 39 (arith_exp)


state 90

   38 arith_exp: exp . PLUS exp
   38          | exp PLUS exp .
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 38 (arith_exp)


state 91

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   41          | exp DIVIDE exp .
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    $default  reduce using rule 41 (arith_exp)


state 92

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   40          | exp TIMES exp .
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    $default  reduce using rule 40 (arith_exp)


state 93

   55 array_exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 109


state 94

   37 func_call_exp: ID LPAREN expseq RPAREN .

    $default  reduce using rule 37 (func_call_exp)


state 95

   51 record_field: ID EQ . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 110


state 96

   54 record_fields: record_fields COMMA . record_field

    ID  shift, and go to state 64

    record_field  go to state 111


state 97

   50 record_exp: ID LBRACE record_fields RBRACE .

    $default  reduce using rule 50 (record_exp)


state 98

   22 expseq: expseq SEMICOLON exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 22 (expseq)


state 99

   25 cond_exp: IF exp THEN exp .
   26         | IF exp THEN exp . ELSE exp
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    ELSE    shift, and go to state 112
    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 25 (cond_exp)


state 100

   27 loop_exp: WHILE exp DO exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 27 (loop_exp)


state 101

   28 loop_exp: FOR exp TO exp . DO exp
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    DO      shift, and go to state 113
    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59


state 102

   16 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   17       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 114

    $default  reduce using rule 1 (empty)

    empty     go to state 115
    tyfields  go to state 116
    tyfield   go to state 117


state 103

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 118
    LBRACE  shift, and go to state 119
    ARRAY   shift, and go to state 120

    ty  go to state 121


state 104

   14 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 122


state 105

   15 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 123


state 106

   24 let_exp: LET decs IN END .

    $default  reduce using rule 24 (let_exp)


state 107

   22 expseq: expseq . SEMICOLON exp
   23 let_exp: LET decs IN expseq . END

    SEMICOLON  shift, and go to state 68
    END        shift, and go to state 124


state 108

   20 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 20 (lvalue)


state 109

   55 array_exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 125


state 110

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   51 record_field: ID EQ exp .

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 51 (record_field)


state 111

   54 record_fields: record_fields COMMA record_field .

    $default  reduce using rule 54 (record_fields)


state 112

   26 cond_exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 126


state 113

   28 loop_exp: FOR exp TO exp DO . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 127


state 114

   13 tyfield: ID . COLON ID

    COLON  shift, and go to state 128


state 115

   11 tyfields: empty .

    $default  reduce using rule 11 (tyfields)


state 116

   16 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 129


state 117

   12 tyfields: tyfield . COMMA tyfields

    COMMA  shift, and go to state 130


state 118

    8 ty: ID .

    $default  reduce using rule 8 (ty)


state 119

    9 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 114

    $default  reduce using rule 1 (empty)

    empty     go to state 115
    tyfields  go to state 131
    tyfield   go to state 117


state 120

   10 ty: ARRAY . OF ID

    OF  shift, and go to state 132


state 121

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


state 122

   14 vardec: VAR ID ASSIGN exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 14 (vardec)


state 123

   15 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 133


state 124

   23 let_exp: LET decs IN expseq END .

    $default  reduce using rule 23 (let_exp)


state 125

   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp
   55 array_exp: ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 55 (array_exp)


state 126

   26 cond_exp: IF exp THEN exp ELSE exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 26 (cond_exp)


state 127

   28 loop_exp: FOR exp TO exp DO exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 28 (loop_exp)


state 128

   13 tyfield: ID COLON . ID

    ID  shift, and go to state 134


state 129

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   17       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    EQ     shift, and go to state 135
    COLON  shift, and go to state 136


state 130

   12 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 114

    $default  reduce using rule 1 (empty)

    empty     go to state 115
    tyfields  go to state 137
    tyfield   go to state 117


state 131

    9 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 138


state 132

   10 ty: ARRAY OF . ID

    ID  shift, and go to state 139


state 133

   15 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 140


state 134

   13 tyfield: ID COLON ID .

    $default  reduce using rule 13 (tyfield)


state 135

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 141


state 136

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 142


state 137

   12 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 12 (tyfields)


state 138

    9 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 9 (ty)


state 139

   10 ty: ARRAY OF ID .

    $default  reduce using rule 10 (ty)


state 140

   15 vardec: VAR ID COLON ID ASSIGN exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 15 (vardec)


state 141

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 16 (fundec)


state 142

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 143


state 143

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    MINUS   shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue         go to state 12
    let_exp        go to state 13
    cond_exp       go to state 14
    loop_exp       go to state 15
    misc_exp       go to state 16
    func_call_exp  go to state 17
    arith_exp      go to state 18
    comp_exp       go to state 19
    bool_exp       go to state 20
    record_exp     go to state 21
    array_exp      go to state 22
    assign_exp     go to state 23
    exp            go to state 144


state 144

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   38 arith_exp: exp . PLUS exp
   39          | exp . MINUS exp
   40          | exp . TIMES exp
   41          | exp . DIVIDE exp
   42 comp_exp: exp . EQ exp
   43         | exp . LT exp
   44         | exp . LE exp
   45         | exp . NEQ exp
   46         | exp . GT exp
   47         | exp . GE exp
   48 bool_exp: exp . AND exp
   49         | exp . OR exp

    OR      shift, and go to state 48
    AND     shift, and go to state 49
    GE      shift, and go to state 50
    GT      shift, and go to state 51
    LE      shift, and go to state 52
    LT      shift, and go to state 53
    NEQ     shift, and go to state 54
    EQ      shift, and go to state 55
    MINUS   shift, and go to state 56
    PLUS    shift, and go to state 57
    DIVIDE  shift, and go to state 58
    TIMES   shift, and go to state 59

    $default  reduce using rule 17 (fundec)
